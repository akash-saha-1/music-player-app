{"version":3,"sources":["assets/spinner.gif","Shared/Loader/Loader.js","Hooks/HttpHook.js","Shared/Modal/ErrorModal/ErrorModal.js","Components/MusicPlayer/MusicPlayer.js","Components/TrackList/TrackList.js","Screens/Artists/Artists.js","Screens/Countries/Countries.js","Screens/Genres/Genres.js","Screens/Home/Home.js","Screens/Search/Search.js","Shared/Header/Header.js","Shared/Navigation/LeftNavigation.js","App.js","index.js"],"names":["Loader","className","src","spinner","alt","useHttpClient","useState","isLoading","setIsLoading","error","setError","process","apiUrl","setApiUrl","apiHost","setApiHost","apiKey","setApiKey","apiLocale","setApiLocale","useEffect","sendRequest","useCallback","url","a","method","indexOf","options","params","headers","axios","request","then","response","responseData","data","catch","console","clearError","ModalOverlay","props","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","type","onClick","onClear","ReactDOM","createPortal","document","getElementById","ErrorModal","Fragment","MusicPlayer","isPlaying","setIsPlaying","image","setImage","title","setTitle","subTitle","setSubTitle","music","setMusic","song","pause","images","coverart","subtitle","Audio","hub","actions","uri","play","playPauseMusic","TrackList","city","cityName","apiListId","songsLimit","parseInt","songsList","setSongsList","musicPlayer","showMusicPlayer","setSong","tracks","loadSongs","playSong","header","map","share","artists","artist","index","alias","href","Artists","artistList","setArtistList","selectedArtist","setSelectedArtist","colorsList","setTabName","loadArtists","loadArtistSongs","artistName","artistId","charAt","toUpperCase","slice","backgroundColor","id","Math","random","Countries","countries","setCountries","history","useHistory","loadCountries","showCity","cityId","setCityName","setApiListId","push","country","name","cities","length","listid","Genres","genres","setGenres","selectedGenre","setSelectedGenre","global","loadGenres","loadTracks","listId","genre","Home","setSongsLimit","Search","searchText","setSearchText","query","URLSearchParams","window","location","search","get","setTimeout","value","trim","hits","searchSongs","track","Header","placeholder","LeftNavigation","tab","tabName","App","routes","path","exact","setCity","to","render","StrictMode"],"mappings":"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","file":"static/js/main.5540a4fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.ece48b52.gif\";","import React from 'react';\r\nimport spinner from './../../assets/spinner.gif';\r\nimport './loader.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading\"\r\n        className=\"horizontal-vertical-middle-align\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [apiUrl, setApiUrl] = useState(process.env.REACT_APP_RAPID_API_URL);\r\n  const [apiHost, setApiHost] = useState(process.env.REACT_APP_RAPID_API_HOST);\r\n  const [apiKey, setApiKey] = useState(process.env.REACT_APP_RAPID_API_KEY);\r\n  const [apiLocale, setApiLocale] = useState(\r\n    process.env.REACT_APP_RAPID_API_LOCALE\r\n  );\r\n\r\n  useEffect(() => {\r\n    setApiUrl(process.env.REACT_APP_RAPID_API_URL);\r\n    setApiHost(process.env.REACT_APP_RAPID_API_HOST);\r\n    setApiKey(process.env.REACT_APP_RAPID_API_KEY);\r\n    setApiLocale(process.env.REACT_APP_RAPID_API_LOCALE);\r\n  }, []);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null) => {\r\n    if (url.indexOf('/charts/list') > -1) {\r\n      url = apiUrl + url;\r\n    } else {\r\n      url = apiUrl + url + '&locale=' + apiLocale;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    var options = {\r\n      method: method,\r\n      url: url,\r\n      params: {},\r\n      headers: {\r\n        'x-rapidapi-key': apiKey,\r\n        'x-rapidapi-host': apiHost,\r\n      },\r\n    };\r\n\r\n    let responseData;\r\n    await axios\r\n      .request(options)\r\n      .then((response) => {\r\n        responseData = response.data;\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(error);\r\n        setIsLoading(false);\r\n        throw error;\r\n      });\r\n    return responseData;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './../modal.scss';\r\n\r\nconst ModalOverlay = (props) => {\r\n  let modalBody = 'Sorry! Something went wrong.Please try again later.';\r\n\r\n  const content = (\r\n    <div className=\"modal-background\">\r\n      <div className={`modal ${props.className}`} style={props.style}>\r\n        <header className={`modal__header ${props.headerClass}`}>\r\n          <h3>Loading Failed</h3>\r\n        </header>\r\n        <form\r\n          onSubmit={\r\n            props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n          }\r\n        >\r\n          <div className={`modal__content ${props.contentClass}`}>\r\n            <p>{modalBody}</p>\r\n          </div>\r\n          <footer className={`modal__footer ${props.footerClass}`}>\r\n            <button\r\n              type=\"btn\"\r\n              className=\"btn btn-danger btn-lg\"\r\n              onClick={props.onClear}\r\n            >\r\n              Okay\r\n            </button>\r\n          </footer>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.error && <ModalOverlay {...props} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './musicPlayer.scss';\r\n\r\nconst MusicPlayer = (props) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [subTitle, setSubTitle] = useState();\r\n  const [music, setMusic] = useState();\r\n  const song = props.song;\r\n\r\n  useEffect(() => {\r\n    setIsPlaying(false);\r\n    if (music) {\r\n      music.pause();\r\n    }\r\n    setMusic(null);\r\n    if (song) {\r\n      setImage(song.images.coverart);\r\n      setTitle(song.title);\r\n      setSubTitle(song.subtitle);\r\n      setMusic(new Audio(song.hub.actions[1].uri));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [song]);\r\n\r\n  useEffect(() => {\r\n    const startMusic = () => {\r\n      if (music) {\r\n        setIsPlaying(true);\r\n        music.play();\r\n      }\r\n    };\r\n    startMusic();\r\n    // eslint-disable-next-line\r\n  }, [music]);\r\n\r\n  const playPauseMusic = useCallback(() => {\r\n    if (isPlaying) {\r\n      setIsPlaying(false);\r\n      music.pause();\r\n    } else {\r\n      setIsPlaying(true);\r\n      music.play();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isPlaying, music]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {song && (\r\n        <div className=\"col-12 row music-container\">\r\n          <div className=\"col-10 details-wrapper\">\r\n            <div className=\"image\">\r\n              <img src={image} alt=\"music\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <p className=\"preview\">Now Playing</p>\r\n              <h6 className=\"title\">{title}</h6>\r\n              <h6 className=\"text-xs subtitle\">{subTitle}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 playing-wrapper\">\r\n            <div className=\"play-icon\" onClick={playPauseMusic}>\r\n              {isPlaying ? (\r\n                <i className=\"fas fa-pause-circle\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-play-circle\"></i>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport './trackList.scss';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\nimport MusicPlayer from '../MusicPlayer/MusicPlayer';\r\n\r\nconst TrackList = (props) => {\r\n  const city = props.cityName;\r\n  const apiListId = props.apiListId;\r\n  const songsLimit = parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [musicPlayer, showMusicPlayer] = useState(false);\r\n  const [song, setSong] = useState();\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  useEffect(() => {\r\n    setSongsList([]);\r\n    const loadSongs = async () => {\r\n      let response;\r\n      if (apiListId) {\r\n        try {\r\n          response = await sendRequest(\r\n            `/charts/track?startFrom=0&pageSize=${songsLimit}&listId=${apiListId}`\r\n          );\r\n          if (response) setSongsList(response.tracks);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n    loadSongs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const playSong = useCallback((song) => {\r\n    setSong(song);\r\n    showMusicPlayer(true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n      {musicPlayer && <MusicPlayer song={song} />}\r\n\r\n      <div className=\"track-page\">\r\n        <h3 className=\"title\">Music List of {city}</h3>\r\n        <div className=\"cards col-12 row\">\r\n          {songsList.map((song) => (\r\n            <div className=\"card col-md-4\" key={song.title}>\r\n              <div className=\"card-wrapper\">\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={song.share.image}\r\n                  alt=\"song-cover\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h4>{song.title}</h4>\r\n                  <h5>\r\n                    Artists:{' '}\r\n                    {song.artists &&\r\n                      song.artists.map((artist, index) => {\r\n                        if (index === 0) {\r\n                          return artist.alias;\r\n                        } else {\r\n                          return ', ' + artist.alias;\r\n                        }\r\n                      })}\r\n                  </h5>\r\n                  <button\r\n                    className=\"btn btn btn-dark play-song horizontal-middle-align\"\r\n                    onClick={() => {\r\n                      playSong(song);\r\n                    }}\r\n                  >\r\n                    Play Music <i className=\"fas fa-music\" />\r\n                  </button>\r\n                  <button className=\"btn more-info horizontal-middle-align\">\r\n                    <a href={song.url}>More Information</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './artists.scss';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\nimport MusicPlayer from '../../Components/MusicPlayer/MusicPlayer';\r\n\r\nconst Artists = (props) => {\r\n  const [artistList, setArtistList] = useState([]);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState();\r\n  const [musicPlayer, showMusicPlayer] = useState(false);\r\n  const [song, setSong] = useState();\r\n\r\n  const songsLimit = parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  let colorsList = [\r\n    'rgb(26, 188, 156)',\r\n    'rgb(52, 152, 219)',\r\n    'rgb(246, 71, 64)',\r\n    'rgb(231, 76, 60)',\r\n    'rgb(140, 122, 230)',\r\n    'rgb(177, 0, 232)',\r\n    'rgb(0, 127, 95)',\r\n    'rgb(211, 84, 0)',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    props.setTabName('artists');\r\n    setArtistList([]);\r\n    setSelectedArtist();\r\n    const loadArtists = async () => {\r\n      let response;\r\n      try {\r\n        response = await sendRequest(\r\n          `/charts/track?startFrom=0&pageSize=${songsLimit}`\r\n        );\r\n        if (response) setArtistList(response.tracks);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    loadArtists();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loadArtistSongs = useCallback(async (artistName, artistId) => {\r\n    setSongsList([]);\r\n    setSelectedArtist(artistName.charAt(0).toUpperCase() + artistName.slice(1));\r\n    let response;\r\n    try {\r\n      response = await sendRequest(\r\n        `/songs/list-artist-top-tracks?id=${artistId}`\r\n      );\r\n      if (response) setSongsList(response.tracks);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const playSong = useCallback((song) => {\r\n    setSong(song);\r\n    showMusicPlayer(true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n      {musicPlayer && <MusicPlayer song={song} />}\r\n\r\n      <div className=\"artist-page col-12\">\r\n        <div className=\"col-12 artist-container\">\r\n          <h2 className=\"title\">Artists</h2>\r\n          <div className=\"col-12 artist-list\">\r\n            {artistList &&\r\n              artistList.map((artists, index) => {\r\n                return artists.artists.map((artist) => {\r\n                  return (\r\n                    <div\r\n                      className=\"artist\"\r\n                      key={Math.random()}\r\n                      style={{\r\n                        backgroundColor: colorsList[index % 8],\r\n                      }}\r\n                      onClick={() => loadArtistSongs(artist.alias, artist.id)}\r\n                    >\r\n                      {artist.alias.charAt(0).toUpperCase() +\r\n                        artist.alias.slice(1)}\r\n                    </div>\r\n                  );\r\n                });\r\n              })}\r\n          </div>\r\n        </div>\r\n        {songsList && selectedArtist && (\r\n          <div className=\"col-12 track-list\">\r\n            <h3>\r\n              Songs of Artist <span>{selectedArtist}</span>\r\n            </h3>\r\n            <div className=\"cards col-12 row\">\r\n              {songsList.map((song) => (\r\n                <div className=\"card col-md-4\" key={song.title + Math.random()}>\r\n                  <div className=\"card-wrapper\">\r\n                    <img\r\n                      className=\"card-img-top\"\r\n                      src={song.images.coverart}\r\n                      alt=\"song-cover\"\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h4>{song.title}</h4>\r\n                      <h6>{song.subtitle}</h6>\r\n                      <button\r\n                        className=\"btn btn btn-dark play-song horizontal-middle-align\"\r\n                        onClick={() => {\r\n                          playSong(song);\r\n                        }}\r\n                      >\r\n                        Play Music\r\n                        <i className=\"fas fa-music\" />\r\n                      </button>\r\n                      <button className=\"btn more-info horizontal-middle-align\">\r\n                        <a href={song.url}>More Information</a>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Artists;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './countries.scss';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\n\r\nconst Countries = (props) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  let colorsList = [\r\n    'rgb(26, 188, 156)',\r\n    'rgb(52, 152, 219)',\r\n    'rgb(246, 71, 64)',\r\n    'rgb(231, 76, 60)',\r\n    'rgb(140, 122, 230)',\r\n    'rgb(177, 0, 232)',\r\n    'rgb(0, 127, 95)',\r\n    'rgb(211, 84, 0)',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    props.setTabName('countries');\r\n    setCountries([]);\r\n    const loadCountries = async () => {\r\n      let response;\r\n      try {\r\n        response = await sendRequest('/charts/list');\r\n        if (response) setCountries(response.countries);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    loadCountries();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const showCity = useCallback((cityName, cityId) => {\r\n    props.setCityName(cityName);\r\n    props.setApiListId(cityId);\r\n    history.push('/tracks');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n\r\n      <div className=\"country-page col-12\">\r\n        <h2 className=\"title\">Countries</h2>\r\n        {countries.map((country, index) => (\r\n          <div\r\n            className=\"col-12 country-container\"\r\n            key={country.id + Math.random()}\r\n            style={{\r\n              backgroundColor: colorsList[index % 8],\r\n            }}\r\n          >\r\n            <h4>{country.name}</h4>\r\n            <div className=\"col-12 city-list\">\r\n              {country.cities.length >= 20 &&\r\n                country.cities.slice(0, 20).map((city) => (\r\n                  <button\r\n                    key={city.id + Math.random()}\r\n                    className=\"btn btn-info city-button\"\r\n                    onClick={() => {\r\n                      showCity(city.name, city.listid);\r\n                    }}\r\n                  >\r\n                    {city.name}\r\n                  </button>\r\n                ))}\r\n              {country.cities.length < 20 &&\r\n                country.cities.map((city) => (\r\n                  <button\r\n                    key={city.id + Math.random()}\r\n                    className=\"btn btn-info city-button\"\r\n                    onClick={() => {\r\n                      showCity(city.name, city.listid);\r\n                    }}\r\n                  >\r\n                    {city.name}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport './genres.scss';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\nimport MusicPlayer from '../../Components/MusicPlayer/MusicPlayer';\r\n\r\nconst Genres = (props) => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [musicPlayer, showMusicPlayer] = useState(false);\r\n  const [song, setSong] = useState();\r\n  const songsLimit = parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  let colorsList = [\r\n    'rgb(26, 188, 156)',\r\n    'rgb(52, 152, 219)',\r\n    'rgb(246, 71, 64)',\r\n    'rgb(231, 76, 60)',\r\n    'rgb(140, 122, 230)',\r\n    'rgb(177, 0, 232)',\r\n    'rgb(0, 127, 95)',\r\n    'rgb(211, 84, 0)',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    props.setTabName('genres');\r\n    setGenres([]);\r\n    setSelectedGenre('');\r\n    const loadGenres = async () => {\r\n      let response;\r\n      try {\r\n        response = await sendRequest('/charts/list');\r\n        if (response) setGenres(response.global.genres);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    loadGenres();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loadTracks = useCallback(async (name, listId) => {\r\n    setSongsList([]);\r\n    setSelectedGenre(name);\r\n    let response;\r\n    try {\r\n      response = await sendRequest(\r\n        `/charts/track?pageSize=${songsLimit}&startFrom=0&listId=${listId}`\r\n      );\r\n      if (response) setSongsList(response.tracks);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const playSong = useCallback((song) => {\r\n    setSong(song);\r\n    showMusicPlayer(true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n      {musicPlayer && <MusicPlayer song={song} />}\r\n\r\n      <div className=\"genre-page col-12\">\r\n        <div className=\"col-12 row genres\">\r\n          <h2 className=\"genre-title col-12\">Global Genres</h2>\r\n          {genres &&\r\n            genres.map((genre, index) => (\r\n              <div\r\n                key={genre.name + Math.random()}\r\n                className=\"col-6 col-sm-4 col-md-3 col-xl-2\"\r\n              >\r\n                <div\r\n                  className=\"genre\"\r\n                  style={{\r\n                    backgroundColor: colorsList[index % 8],\r\n                  }}\r\n                  onClick={() => loadTracks(genre.name, genre.listid)}\r\n                >\r\n                  {genre.name}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {songsList.length > 0 && (\r\n          <div className=\"col-12 song-list\">\r\n            <h2 className=\"title\">Tracks List of {selectedGenre}</h2>\r\n            <div className=\"cards col-12 row\">\r\n              {songsList.map((song) => (\r\n                <div className=\"card col-md-4\" key={song.title}>\r\n                  <div className=\"card-wrapper\">\r\n                    <img\r\n                      className=\"card-img-top\"\r\n                      src={song.share.image}\r\n                      alt=\"song-cover\"\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h4>{song.title}</h4>\r\n                      <h5>\r\n                        Artists:{' '}\r\n                        {song.artists &&\r\n                          song.artists.map((artist, index) => {\r\n                            if (index === 0) {\r\n                              return artist.alias;\r\n                            } else {\r\n                              return ', ' + artist.alias;\r\n                            }\r\n                          })}\r\n                      </h5>\r\n                      <button\r\n                        className=\"btn btn btn-dark play-song horizontal-middle-align\"\r\n                        onClick={() => {\r\n                          playSong(song);\r\n                        }}\r\n                      >\r\n                        Play Music\r\n                        <i className=\"fas fa-music\" />\r\n                      </button>\r\n                      <button className=\"btn more-info horizontal-middle-align\">\r\n                        <a href={song.url}>More Information</a>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport './home.scss';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\nimport MusicPlayer from '../../Components/MusicPlayer/MusicPlayer';\r\n\r\nconst Home = (props) => {\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [musicPlayer, showMusicPlayer] = useState(false);\r\n  const [song, setSong] = useState();\r\n  const [songsLimit, setSongsLimit] = useState(\r\n    parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT)\r\n  );\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    setSongsLimit(parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT));\r\n    showMusicPlayer(false);\r\n\r\n    const loadSongs = async () => {\r\n      let response;\r\n      try {\r\n        response = await sendRequest(\r\n          `/charts/track?startFrom=0&pageSize=${songsLimit}`\r\n        );\r\n        if (response) setSongsList(response.tracks);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    loadSongs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const playSong = useCallback((song) => {\r\n    setSong(song);\r\n    showMusicPlayer(true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n      {musicPlayer && <MusicPlayer song={song} />}\r\n\r\n      <div className=\"home-page\">\r\n        <h3 className=\"title\">Songs List</h3>\r\n        <div className=\"cards col-12 row\">\r\n          {songsList.map((song) => (\r\n            <div className=\"card col-md-4\" key={song.title}>\r\n              <div className=\"card-wrapper\">\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src={song.share.image}\r\n                  alt=\"song-cover\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h4>{song.title}</h4>\r\n                  {/* <h6>{song.subtitle}</h6> */}\r\n                  <h5>\r\n                    Artists:{' '}\r\n                    {song.artists.map((artist, index) => {\r\n                      if (index === 0) {\r\n                        return artist.alias;\r\n                      } else {\r\n                        return ', ' + artist.alias;\r\n                      }\r\n                    })}\r\n                  </h5>\r\n                  <button\r\n                    className=\"btn btn btn-dark play-song horizontal-middle-align\"\r\n                    onClick={() => {\r\n                      playSong(song);\r\n                    }}\r\n                  >\r\n                    Play Music <i className=\"fas fa-music\" />\r\n                  </button>\r\n                  <button className=\"btn more-info horizontal-middle-align\">\r\n                    <a href={song.url}>More Information</a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHttpClient } from '../../Hooks/HttpHook';\r\nimport ErrorModal from '../../Shared/Modal/ErrorModal/ErrorModal';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport './search.scss';\r\nimport MusicPlayer from '../../Components/MusicPlayer/MusicPlayer';\r\n\r\nconst Search = (props) => {\r\n  const songsLimit = parseInt(process.env.REACT_APP_RAPID_API_SONGS_PAGE_LIMIT);\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [searchText, setSearchText] = useState();\r\n  const [musicPlayer, showMusicPlayer] = useState(false);\r\n  const [song, setSong] = useState();\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const query = urlParams.get('query');\r\n    setSearchText(query);\r\n    props.setTabName('search');\r\n\r\n    if (searchText || query) {\r\n      props.setTabName('search');\r\n      setTimeout(() => {\r\n        document.getElementById('search-bar').value = query;\r\n      }, 100);\r\n      const searchSongs = async () => {\r\n        let response;\r\n        try {\r\n          response = await sendRequest(\r\n            `/search?term=${query.trim()}&offset=0&limit=${songsLimit}`\r\n          );\r\n          if (response) setSongsList(response.tracks.hits);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n      searchSongs();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const playSong = useCallback((song) => {\r\n    setSong(song);\r\n    showMusicPlayer(true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <ErrorModal error={error} onClear={clearError} header=\"Loading\" />\r\n      {musicPlayer && <MusicPlayer song={song} />}\r\n\r\n      {!searchText || !songsList ? (\r\n        <div className=\"no-result\">\r\n          Sorry! No Result found. Please search again\r\n        </div>\r\n      ) : null}\r\n      {searchText && songsList && (\r\n        <div className=\"search-container\">\r\n          <h3 className=\"title\">Search Results</h3>\r\n          <div className=\"cards col-12 row\">\r\n            {songsList.map((song) => (\r\n              <div className=\"card col-md-4\" key={Math.random()}>\r\n                <div className=\"card-wrapper\">\r\n                  <img\r\n                    className=\"card-img-top\"\r\n                    src={song.track.images.coverart}\r\n                    alt=\"song-cover\"\r\n                  />\r\n                  <div className=\"card-body\">\r\n                    <h4>{song.track.title}</h4>\r\n                    <h6>{song.track.subtitle}</h6>\r\n                    <button\r\n                      className=\"btn btn btn-dark play-song horizontal-middle-align\"\r\n                      onClick={() => {\r\n                        playSong(song);\r\n                      }}\r\n                    >\r\n                      Play Music\r\n                      <i className=\"fas fa-music\" />\r\n                    </button>\r\n                    <button className=\"btn more-info horizontal-middle-align\">\r\n                      <a href={song.track.url}>More Information</a>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Header = (props) => {\r\n  const searchSong = () => {\r\n    let searchText = document.getElementById('search-bar').value;\r\n    if (!searchText || searchText.trim().length < 1) {\r\n      return false;\r\n    } else {\r\n      props.setTabName('search');\r\n      window.location.href = '/search?query=' + searchText;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"col-12 row header\">\r\n        <div className=\"col-md-6 title\">\r\n          <h3>Music Player</h3>\r\n        </div>\r\n        <div className=\"col-md-6 search-container\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search\"\r\n            id=\"search-bar\"\r\n            placeholder=\"Search any songs,artists...\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={searchSong}\r\n          >\r\n            <i className=\"fas fa-search\" />\r\n          </button>\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './leftNavigation.scss';\r\n\r\nconst LeftNavigation = (props) => {\r\n  const tab = props.tabName;\r\n\r\n  return (\r\n    <div className=\"left-menu\">\r\n      <h3>Libraries</h3>\r\n      <ul>\r\n        <li className={tab === 'home' ? `active` : ''}>\r\n          <a\r\n            href=\"/\"\r\n            onClick={() => {\r\n              document.getElementById('search-bar').value = '';\r\n              props.setTabName('home');\r\n            }}\r\n          >\r\n            Home\r\n          </a>\r\n        </li>\r\n        <li className={tab === 'genres' ? `active` : ''}>\r\n          <a\r\n            href=\"/genres\"\r\n            onClick={() => {\r\n              document.getElementById('search-bar').value = '';\r\n              props.setTabName('genres');\r\n            }}\r\n          >\r\n            Genres\r\n          </a>\r\n        </li>\r\n        <li className={tab === 'countries' ? `active` : ''}>\r\n          <a\r\n            href=\"/countries\"\r\n            onClick={() => {\r\n              document.getElementById('search-bar').value = '';\r\n              props.setTabName('countries');\r\n            }}\r\n          >\r\n            Countries\r\n          </a>\r\n        </li>\r\n        <li className={tab === 'artists' ? `active` : ''}>\r\n          <a\r\n            href=\"/artists\"\r\n            onClick={() => {\r\n              document.getElementById('search-bar').value = '';\r\n              props.setTabName('artists');\r\n            }}\r\n          >\r\n            Artists\r\n          </a>\r\n        </li>\r\n        <li className={tab === 'search' ? `active` : ''}>\r\n          <a\r\n            href=\"/search\"\r\n            onClick={() => {\r\n              props.setTabName('search');\r\n            }}\r\n          >\r\n            Search Results\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNavigation;\r\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport TrackList from './Components/TrackList/TrackList';\nimport Artists from './Screens/Artists/Artists';\nimport Countries from './Screens/Countries/Countries';\nimport Genres from './Screens/Genres/Genres';\nimport Home from './Screens/Home/Home';\nimport Search from './Screens/Search/Search';\nimport Header from './Shared/Header/Header';\nimport LeftNavigation from './Shared/Navigation/LeftNavigation';\n\nconst App = () => {\n  const [apiListId, setApiListId] = useState();\n  const [cityName, setCityName] = useState('');\n  const [tabName, setTabName] = useState('home');\n\n  let routes = (\n    <Switch>\n      <Route path=\"/home\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/genres\" exact>\n        <Genres tabName={tabName} setTabName={setTabName} />\n      </Route>\n      <Route path=\"/countries\" exact>\n        <Countries\n          setApiListId={setApiListId}\n          tabName={tabName}\n          setTabName={setTabName}\n          setCityName={setCityName}\n        />\n      </Route>\n      <Route path=\"/artists\" exact>\n        <Artists setApiListId={setApiListId} setTabName={setTabName} />\n      </Route>\n      <Route path=\"/tracks\" exact>\n        <TrackList\n          setTabName={setTabName}\n          cityName={cityName}\n          apiListId={apiListId}\n        />\n      </Route>\n      <Route path=\"/search\" exact>\n        <Search\n          tabName={tabName}\n          setTabName={setTabName}\n          setCity={setCityName}\n        />\n      </Route>\n      <Redirect to=\"/\" exact />\n    </Switch>\n  );\n\n  return (\n    <Router>\n      <div className=\"col-12 container\">\n        <Header tabName={tabName} setTabName={setTabName} />\n        <div className=\"col-12 row body\">\n          <div className=\"col-md-2\">\n            <LeftNavigation tabName={tabName} setTabName={setTabName} />\n          </div>\n          <div className=\"col-md-10\">{routes}</div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}